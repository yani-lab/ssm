<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!--1. 注解式开发 -->
    <!--1) 注解驱动,用于激活已经在spring容器中注册过的bean上面的注解-->
    <!--<context:annotation-config/>-->
    <!-- 2) 用注解方式注入bean，并指定查找范围：com.zking.oa及子子孙孙包，使用了该注解后，context:annotation-config注解可以省略 -->
    <context:component-scan base-package="com.zking.ssm">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--2. 引入外置jdbc配置文件 -->
    <!-- 第一种方式
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    -->
    <!-- 第二种方式，比第一种方式更简洁，第一种方式更好理解一些 -->
    <context:property-placeholder location="classpath*:*.properties"/>

    <!--5. 声明式事务配置开始 -->
    <!--1) 开启自动代理 -->
    <aop:aspectj-autoproxy/>

    <!--2) 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 注解式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
